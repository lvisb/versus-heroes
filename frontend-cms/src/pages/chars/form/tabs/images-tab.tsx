import {
  Button,
  Card,
  CardActions,
  CardMedia,
  Grid,
  Stack,
  Typography,
  useTheme,
} from "@mui/material";
import { useOne, useParsed } from "@refinedev/core";
import { useEffect, useState } from "react";
import { supabase } from "../../../../consts";
import { useFormField } from "../../../../hooks/use-form-field.hook";

export const ImagesTab = () => {
  const { id } = useParsed();
  const { palette } = useTheme();
  const [profileImageId, setProfileImageId] = useState<string | null>(null);
  const { fieldName, formContext } = useFormField({
    fieldName: "profileImageId",
    i18nPath: "char.fields",
  });

  const { setValue, getValues } = formContext;

  const { data, isLoading, isError } = useOne({
    resource: "char",
    id: id,
  });

  if (isLoading) return null;

  useEffect(() => {
    const imageId = getValues(fieldName) || data?.data.profileImageId;

    setProfileImageId(imageId);
  }, []);

  const images = data?.data.images;

  return (
    <>
      <Typography variant="body2" gutterBottom maxWidth={500} marginBottom={4}>
        These images were generated by artificial intelligence. The intention is
        not for them to be identical to the character, but rather to show us an
        alternate reality seen by the AI.
      </Typography>

      <Stack direction="row" spacing={2}>
        {images.map((image: any) => (
          <Card
            key={image.imageId}
            sx={{
              maxWidth: 200,
              border:
                profileImageId === image.imageId
                  ? `solid 1px ${palette.primary.main}`
                  : "none",
            }}
          >
            <CardMedia
              component="img"
              image={`${supabase.charAssetsUrl}/${image.imagePath}`}
              alt="Descrição da imagem"
            />
            <CardActions>
              <Button
                size="small"
                sx={{ textAlign: "center" }}
                fullWidth
                disabled={profileImageId === image.imageId}
                onClick={() => {
                  setProfileImageId(image.imageId);
                  setValue(fieldName, image.imageId);
                }}
              >
                {profileImageId === image.imageId ? "Main image" : "Set as main"}
              </Button>
            </CardActions>
          </Card>
        ))}
      </Stack>
    </>
  );
};
